{"version":3,"sources":["images/1.png","images/2.png","images/3.png","images/4.png","images/5.png","App.js","reportWebVitals.js","index.js"],"names":["images","first","second","third","fourth","fifth","App","useState","index","setIndex","className","onClick","NotificationManager","info","src","alt","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"wLAAe,G,MAAA,IAA0B,+BCA1B,MAA0B,8BCA1B,MAA0B,8BCA1B,MAA0B,8BCA1B,MAA0B,8B,cCSnCA,EAAS,CAACC,EAAOC,EAAQC,EAAOC,EAAQC,GAyB/BC,MAvBf,WACE,MAA0BC,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAaA,OACE,gCACE,cAAC,wBAAD,IACA,qBAAKC,UAAU,sCAAsCC,QAAS,kBAP9DC,sBAAoBC,KAAK,kCAAmC,KAAM,UAClEJ,EAAS,MAOT,qBAAKK,IAAKd,EAAOQ,GAAQO,IAAK,QAASJ,QAAS,WAd9CH,EAAQR,EAAOgB,OAAS,GAC1BP,EAASD,EAAQ,UCJRS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ed949719.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/1.490826ce.png\";","export default __webpack_public_path__ + \"static/media/2.a3836469.png\";","export default __webpack_public_path__ + \"static/media/3.c67378bb.png\";","export default __webpack_public_path__ + \"static/media/4.28b85503.png\";","export default __webpack_public_path__ + \"static/media/5.c5404f4b.png\";","import React, { useState } from \"react\";\r\nimport './App.css';\r\nimport first from \"./images/1.png\";\r\nimport second from \"./images/2.png\";\r\nimport third from \"./images/3.png\";\r\nimport fourth from \"./images/4.png\";\r\nimport fifth from \"./images/5.png\";\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\n\r\nconst images = [first, second, third, fourth, fifth];\r\n\r\nfunction App() {\r\n  const [index, setIndex] = useState(0);\r\n\r\n  const increaseIndex = () => {\r\n    if (index < images.length - 1) {\r\n      setIndex(index + 1);\r\n    };\r\n  }\r\n\r\n  const resetIndex = () => {\r\n      NotificationManager.info('U bent terug bij de eerste stap', null, 2000);\r\n      setIndex(0);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <NotificationContainer />\r\n      <div className=\"bg-transparent w-full h-16 absolute\" onClick={() => resetIndex()}></div>\r\n      <img src={images[index]} alt={\"empty\"} onClick={() => increaseIndex()} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}